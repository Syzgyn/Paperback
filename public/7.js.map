{"version":3,"sources":["webpack:///./resources/js/AddComic/Import/ImportComics/ImportComicFooter.js","webpack:///./resources/js/AddComic/Import/ImportComics/ImportComicRow.js","webpack:///./resources/js/AddComic/Import/ImportComics/ImportComicSearchResults.js","webpack:///./resources/js/AddComic/Import/ImportComics/ImportComicTable.js","webpack:///./resources/js/AddComic/Import/ImportComics/ImportComics.js","webpack:///./resources/js/Components/Page/PageRow.js"],"names":["ImportComicFooter","props","dispatch","useDispatch","count","useSelector","importComicsCheckedCountSelector","importComics","e","preventDefault","importSelectedDirs","checkedCount","ImportTableRow","toggleChecked","toggleCheckbox","id","changeMonitor","setMonitored","monitored","target","value","checked","items","length","name","comicCount","ImportComicSearchResults","selector","importComicsItemSelectorFactory","isLoading","isPopulated","useEffect","fetchSearchResults","changeMatch","setMatchId","matchId","map","item","cvid","startYear","numIssues","publisher","ImportComicTable","match","folderId","params","importComicsSelector","fetchItems","onMasterChange","setAllChecked","index","withRouter","Import","PageRow","className","children","propTypes","PropTypes","node","string","defaultProps"],"mappings":"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","file":"7.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeCheckedItems, importSelectedDirs, importComicsCheckedCountSelector } from \"@/Store/Slices/importComics\";\n\nconst ImportComicFooter = (props) => {\n    const dispatch = useDispatch();\n    const count = useSelector(importComicsCheckedCountSelector); \n\n    function importComics(e) {\n        e.preventDefault();\n        dispatch(importSelectedDirs());\n    }\n\n    return (\n        <div>\n            <button disabled={props.checkedCount == 0} className=\"btn btn-primary\" onClick={importComics} >Import {count} Comics</button>\n        </div>\n    );\n};\n\nexport default ImportComicFooter;\n","import React, { useEffect } from \"react\";\nimport ImportComicSearchResults from \"@/AddComic/Import/ImportComics/ImportComicSearchResults\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleCheckbox, setMonitored} from \"@/Store/Slices/importComics\";\n\nconst ImportTableRow = (props) => {\n    const dispatch = useDispatch();\n\n    function toggleChecked() {\n        dispatch(toggleCheckbox(props.id));\n    }\n\n    function changeMonitor(e) {\n        dispatch(setMonitored({id: props.id, monitored: e.target.value}));\n    }\n\n    return (\n        <tr>\n            <td><input type=\"checkbox\" checked={props.checked} disabled={props.items.length == 0} onChange={toggleChecked} /></td>\n            <td>{props.name}</td>\n            <td>{props.comicCount}</td>\n            <td>\n                <select defaultValue=\"all\" className=\"custom-select\" onChange={changeMonitor} >\n                    <option value=\"all\">All Issues</option>\n                    <option value=\"future\">Future Issues</option>\n                    <option value=\"missing\">Missing Issues</option>\n                    <option value=\"existing\">Existing Issues</option>\n                    <option value=\"none\">None</option>\n                </select>\n            </td>\n            <td>\n                <ImportComicSearchResults id={props.id} />\n            </td>\n        </tr>\n    )\n}\n\nexport default ImportTableRow;\n","import React, { useEffect } from \"react\";\nimport { importComicsItemSelectorFactory, fetchSearchResults, setMatchId } from \"@/Store/Slices/importComics\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ImportComicSearchResults = (props) => {\n    const dispatch = useDispatch();\n    const selector = importComicsItemSelectorFactory(props.id);\n    const { name, isLoading, isPopulated, items } = useSelector(selector);\n\n    useEffect(() => {\n        dispatch(fetchSearchResults(props.id));\n    }, [dispatch]);\n\n    function changeMatch(e) {\n        dispatch(setMatchId({id: props.id, matchId: e.target.value}));\n    }\n\n    //TODO: Replace with more dynamic dropdown (search, extended limits, etc)\n    return (\n        <select className=\"custom-select\" defaultValue=\"temp\" onChange={changeMatch} >\n            {isLoading ?\n                <option disabled value=\"temp\">Loading...</option>\n            : null}\n            {isPopulated && items.length == 0 ?\n                <option disabled value=\"temp\">No Matches Found</option>\n            : null}\n            {items.map(item => \n                <option key={item.cvid} value={item.cvid} >{item.name + \" (\" + item.startYear + \") [\" + item.numIssues + \" issues] [\" + item.publisher + \"]\"}</option>\n            )}\n        </select>\n    )\n}\n\nexport default ImportComicSearchResults;\n\n","import React, { useEffect } from \"react\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport ImportComicRow from \"@/AddComic/Import/ImportComics/ImportComicRow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchItems, importComicsSelector, setAllChecked } from \"@/Store/Slices/importComics\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ImportComicTable = ({match}) => {\n    const dispatch = useDispatch();\n    const folderId = match.params.folderId;\n    const { isLoading, isPopulated, items } = useSelector(importComicsSelector);\n\n    useEffect(() => {\n        dispatch(fetchItems(folderId));\n    }, [dispatch, folderId]);\n\n    function onMasterChange(e) {\n        const checked = e.target.checked;\n        dispatch(setAllChecked(checked));\n    }\n    \n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th><input type=\"checkbox\" defaultChecked={true} onChange={onMasterChange} /></th>\n                    <th>Folder</th>\n                    <th>Issue Count</th>\n                    <th>Monitor</th>\n                    <th>Series</th>\n                </tr>\n            </thead>\n            <tbody>\n                {items.map((item, index) => \n                    <ImportComicRow key={index} id={index} {...item} />\n                )}\n            </tbody>\n        </table>\n    );\n}\n\nexport default withRouter(ImportComicTable);\n","import React, { useEffect, useState } from \"react\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport ImportComicTable from \"@/AddComic/Import/ImportComics/ImportComicTable\";\nimport ImportComicFooter from \"@/AddComic/Import/ImportComics/ImportComicFooter\";\n\nconst Import = () => {\n    return (\n        <PageRow>\n            <form>\n                <ImportComicTable />\n                <ImportComicFooter />\n            </form>\n        </PageRow>\n    );\n}\n\nexport default Import;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n"],"sourceRoot":""}