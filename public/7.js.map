{"version":3,"sources":["webpack:///./resources/js/Components/Page/PageRow.js","webpack:///./resources/js/Settings/General/GeneralSettings.js","webpack:///./resources/js/Settings/General/GeneralSettingsForm.js","webpack:///./resources/js/Settings/SettingsMenuBar.js","webpack:///./resources/js/Settings/SettingsToolbar.js"],"names":["PageRow","props","className","children","propTypes","PropTypes","node","string","defaultProps","GeneralSettings","generalForm","React","createRef","onSavePress","bind","current","submitForm","Component","GeneralSettingsForm","forwardRef","formRef","dispatch","useDispatch","onSubmit","values","submitSettings","useSelector","settingsGeneralSelector","isLoading","isPopulated","items","useEffect","fetchSettings","displayName","SettingsMenuBar","links","to","text","map","link","index","SettingsToolbar","saveSettings","event","preventDefault","func","isRequired"],"mappings":"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","file":"7.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n","import React, { Component } from \"react\";\nimport SettingsMenuBar from \"@/Settings/SettingsMenuBar\";\nimport SettingsToolbar from \"@/Settings/SettingsToolbar\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport GeneralSettingsForm from \"@/Settings/General/GeneralSettingsForm\";\n\nclass GeneralSettings extends Component {\n    constructor() {\n        super();\n        this.generalForm = React.createRef();\n\n        this.onSavePress = this.onSavePress.bind(this);\n    }\n\n    onSavePress() {\n        this.generalForm.current.submitForm();\n    }\n\n    render() {\n        return (\n            <>\n                <SettingsMenuBar />\n                <SettingsToolbar onSavePress={this.onSavePress} />\n                <PageRow>\n                    <h2>General</h2>\n                </PageRow>\n                <GeneralSettingsForm ref={this.generalForm} />\n            </>\n        );\n    }\n}\n\nexport default GeneralSettings;\n","import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup } from \"reactstrap\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    fetchSettings,\n    submitSettings,\n    settingsGeneralSelector,\n} from \"@/Store/Slices/Settings/general\";\n\nconst GeneralSettingsForm = React.forwardRef((props, formRef) => {\n    const dispatch = useDispatch();\n\n    function onSubmit(values) {\n        dispatch(submitSettings(values));\n    }\n\n    const { isLoading, isPopulated, items } = useSelector(\n        settingsGeneralSelector\n    );\n\n    useEffect(() => {\n        if (!isPopulated) {\n            dispatch(fetchSettings());\n        }\n    }, [dispatch, isPopulated]);\n\n    if (isLoading || !isPopulated) {\n        return <LoadingIndicator />;\n    }\n\n    return (\n        <PageRow>\n            <Formik\n                innerRef={formRef}\n                initialValues={items}\n                onSubmit={onSubmit}\n            >\n                <Form>\n                    <FormGroup>\n                        <label htmlFor=\"comicvine_apikey\">\n                            ComicVine API Key\n                        </label>\n                        <Field\n                            name=\"comicvine_apikey\"\n                            type=\"text\"\n                            className=\"form-control\"\n                        />\n                        <ErrorMessage name=\"comicvine_apikey\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <label>Bypass Cache?</label>\n                        <Field type=\"checkbox\" name=\"bypass_cache\" />\n                        <ErrorMessage name=\"bypass_cache\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <label>Destination Directory</label>\n                        <Field\n                            type=\"text\"\n                            name=\"destination_dir\"\n                            className=\"form-control\"\n                        />\n                        <ErrorMessage name=\"destination_dir\" />\n                    </FormGroup>\n                </Form>\n            </Formik>\n        </PageRow>\n    );\n});\n\nGeneralSettingsForm.displayName = \"GeneralSettingsForm\";\n\nexport default GeneralSettingsForm;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PageRow from \"@/Components/Page/PageRow\";\n\nfunction SettingsMenuBar() {\n    const links = [\n        {\n            to: \"/settings/general\",\n            text: \"General\",\n        },\n        {\n            to: \"/settings/indexers\",\n            text: \"Indexers\",\n        },\n        {\n            to: \"/settings/downloaders\",\n            text: \"Download Clients\",\n        },\n    ];\n\n    return (\n        <PageRow className=\"mb-3\">\n            <ul className=\"nav nav-tabs\">\n                {links.map((link, index) => (\n                    <li key={index} className=\"nav-item\">\n                        <NavLink to={link.to} className=\"nav-link\">\n                            {link.text}\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </PageRow>\n    );\n}\n\nSettingsMenuBar.propTypes = {};\n\nexport default SettingsMenuBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\n\nclass SettingsToolbar extends Component {\n    constructor() {\n        super();\n        this.saveSettings = this.saveSettings.bind(this);\n    }\n\n    saveSettings(event) {\n        event.preventDefault();\n\n        const { onSavePress } = this.props;\n\n        onSavePress();\n    }\n\n    render() {\n        const { onSavePress } = this.props;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-1 offset-11\">\n                    <Button onClick={onSavePress}>Save</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nSettingsToolbar.propTypes = {\n    onSavePress: PropTypes.func.isRequired,\n};\n\nexport default SettingsToolbar;\n"],"sourceRoot":""}