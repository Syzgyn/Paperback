{"version":3,"sources":["webpack:///./resources/js/AddComic/AddNewComic/AddNewComic.js","webpack:///./resources/js/AddComic/AddNewComic/ComicItem.js","webpack:///./resources/js/AddComic/AddNewComic/ComicItemButtons.js","webpack:///./resources/js/AddComic/AddNewComic/Search.js","webpack:///./resources/js/Components/ComicBadge.js","webpack:///./resources/js/Components/Page/PageRow.js"],"names":["AddNewComic","dispatch","useDispatch","useSelector","addComicsSelector","isLoading","isPopulated","items","useEffect","clearAddComics","onSearchSubmit","value","searchComics","map","comic","cvid","ComicItem","props","numIssues","startYear","publisher","image","name","displayDescription","inLibrary","singleView","classes","__html","DOMPurify","sanitize","ADD_ATTR","propTypes","PropTypes","number","history","shape","push","func","string","bool","ComicItemButtons","isAdding","comics","comicsSelector","findIndex","$","tooltip","clickAddComic","addComic","clickAddAndSearchComic","addComicAndSearch","Search","state","onValueChange","bind","onFormSubmit","event","setState","target","preventDefault","callback","searchCallback","Component","isRequired","ComicBadge","content","children","color","defaultProps","node","PageRow","className"],"mappings":"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","file":"4.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport ComicItem from \"./ComicItem\";\nimport { Search as Searchbar } from \"./Search\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n    searchComics,\n    addComicsSelector,\n    clearAddComics,\n} from \"@/Store/Slices/addComics\";\n\nconst AddNewComic = () => {\n    const dispatch = useDispatch();\n    const { isLoading, isPopulated, items } = useSelector(addComicsSelector);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearAddComics());\n        };\n    }, [dispatch]);\n\n    function onSearchSubmit(value) {\n        dispatch(searchComics(value));\n    }\n\n    return (\n        <>\n            <Link to=\"/add/import\" className=\"btn btn-secondary\">\n                Import\n            </Link>\n            <Searchbar searchCallback={onSearchSubmit} />\n            <PageRow>\n                {isLoading ? (\n                    <LoadingIndicator />\n                ) : isPopulated ? (\n                    <div id=\"comic-list\">\n                        {items.map((comic) => (\n                            <div\n                                className=\"comic-list-item pb-4\"\n                                key={comic.cvid}\n                            >\n                                <ComicItem {...comic} />\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </PageRow>\n        </>\n    );\n};\n\nexport default AddNewComic;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DOMPurify from \"dompurify\";\nimport Pluralize from \"react-pluralize\";\nimport ComicBadge from \"@/Components/ComicBadge\";\nimport ComicItemButtons from \"@/AddComic/AddNewComic/ComicItemButtons\";\n\nconst ComicItem = (props) => {\n    const {\n        cvid,\n        numIssues,\n        startYear,\n        publisher,\n        image,\n        name,\n        displayDescription,\n        inLibrary,\n        singleView,\n        classes,\n    } = props;\n\n    return (\n        <div className={\"row pb-5 \" + classes}>\n            <div className=\"col-md-2 col-sm-3\">\n                <img className=\"cover-image\" src={image} />\n            </div>\n            <div className=\"col-md-10 col-sm-9\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <span className=\"h2 mr-2\">\n                            {name}{\" \"}\n                            <span className=\"comic-year\">({startYear})</span>\n                        </span>\n                        {!singleView && publisher ? (\n                            <ComicBadge color=\"secondary\">\n                                {publisher}\n                            </ComicBadge>\n                        ) : null}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div\n                            className=\"comic-description\"\n                            dangerouslySetInnerHTML={{\n                                __html: DOMPurify.sanitize(displayDescription, {\n                                    ADD_ATTR: [\"target\"],\n                                }),\n                            }}\n                        ></div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <ComicBadge>\n                            <Pluralize singular={\"issue\"} count={numIssues} />\n                        </ComicBadge>\n                    </div>\n                    <div className=\"col-md-3 offset-md-7\">\n                        <ComicItemButtons cvid={cvid} inLibrary={inLibrary} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nComicItem.propTypes = {\n    cvid: PropTypes.number,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }),\n    numIssues: PropTypes.number,\n    startYear: PropTypes.number,\n    publisher: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    displayDescription: PropTypes.string,\n    inLibrary: PropTypes.bool,\n    singleView: PropTypes.bool,\n    classes: PropTypes.string,\n    dispatch: PropTypes.func,\n};\n\nexport default ComicItem;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Plus as PlusIcon, Search as SearchIcon } from \"react-feather\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    addComicsSelector,\n    addComic,\n    addComicAndSearch,\n} from \"@/Store/Slices/addComics\";\nimport { comicsSelector } from \"@/Store/Slices/comics\";\n\nconst ComicItemButtons = (props) => {\n    const dispatch = useDispatch();\n    const { isAdding } = useSelector(addComicsSelector);\n    const comics = useSelector(comicsSelector);\n    const { cvid } = props;\n\n    const inLibrary =\n        comics.items.findIndex((comic) => comic.cvid == cvid) > -1;\n\n    useEffect(() => {\n        $('[data-toggle=\"tooltip\"]').tooltip();\n        return () => {\n            $('[data-toggle=\"tooltip\"]').tooltip(\"hide\");\n        };\n    });\n\n    function clickAddComic() {\n        dispatch(addComic(props.cvid));\n    }\n\n    function clickAddAndSearchComic() {\n        dispatch(addComicAndSearch(props.cvid));\n    }\n\n    if (inLibrary) {\n        return (\n            <Link to={\"/comic/\" + cvid}>\n                <button type=\"button\" className=\"btn btn-outline-secondary\">\n                    Already in Library\n                </button>\n            </Link>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"btn-group\">\n                <button\n                    onClick={clickAddComic}\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    data-toggle=\"tooltip\"\n                    data-placement=\"top\"\n                    title=\"Add\"\n                    disabled={isAdding}\n                >\n                    <PlusIcon />\n                </button>\n                <button\n                    onClick={clickAddAndSearchComic}\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    data-toggle=\"tooltip\"\n                    data-placement=\"top\"\n                    data-html=\"true\"\n                    title=\"Add and search<br>for missing issues\"\n                    disabled={isAdding}\n                >\n                    <SearchIcon />\n                </button>\n            </div>\n        </>\n    );\n};\n\nComicItemButtons.propTypes = {\n    cvid: PropTypes.number,\n    inLibrary: PropTypes.bool,\n};\n\nexport default ComicItemButtons;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Search as SearchIcon } from \"react-feather\";\n\nclass Search extends Component {\n    constructor() {\n        super();\n        this.state = {\n            value: \"\",\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    onValueChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    onFormSubmit(event) {\n        event.preventDefault();\n\n        const callback = this.props.searchCallback;\n        callback(this.state.value);\n    }\n\n    render() {\n        return (\n            <div className=\"row mb-5\">\n                <div className=\"col-12\">\n                    <form onSubmit={this.onFormSubmit}>\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                spellCheck=\"false\"\n                                placeholder=\"Search for a Comic series\"\n                                aria-label=\"Search\"\n                                value={this.state.value}\n                                onChange={this.onValueChange}\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary\"\n                                >\n                                    <SearchIcon className=\"search-button\" />\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    searchCallback: PropTypes.func.isRequired,\n};\n\nexport { Search };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ComicBadge extends Component {\n    render() {\n        const content = this.props.children;\n        const { color } = this.props;\n        return (\n            <span className={\"comic-badge mr-2 badge badge-\" + color}>\n                {content}\n            </span>\n        );\n    }\n}\n\nComicBadge.defaultProps = {\n    color: \"primary\",\n};\n\nComicBadge.propTypes = {\n    children: PropTypes.node,\n    color: PropTypes.string,\n};\n\nexport default ComicBadge;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n"],"sourceRoot":""}