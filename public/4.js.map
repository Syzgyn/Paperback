{"version":3,"sources":["webpack:///./resources/js/Comic/Details/ComicSettings.js","webpack:///./resources/js/Comic/Index/ComicIndex.js","webpack:///./resources/js/Comic/Index/ComicIndexHeader.js","webpack:///./resources/js/Comic/Index/IssueCountBar.js","webpack:///./resources/js/Comic/Index/Overview/ComicIndexOverviewItem.js","webpack:///./resources/js/Comic/Index/Overview/ComicIndexOverviewView.js","webpack:///./resources/js/Comic/Index/Poster/ComicIndexPosterItem.js","webpack:///./resources/js/Comic/Index/Poster/ComicIndexPosterView.js","webpack:///./resources/js/Comic/Index/Table/ComicIndexTableItem.js","webpack:///./resources/js/Comic/Index/Table/ComicIndexTableView.js","webpack:///./resources/js/Components/ComicBadge.js","webpack:///./resources/js/Components/Page/PageRow.js"],"names":["ComicSettings","cvid","dispatch","useDispatch","onDeleteClick","deleteComic","onSearchClick","searchComic","propTypes","PropTypes","number","ComicIndex","useSelector","sortedComicsSelector","comics","items","isLoading","isPopulated","view","length","getViewComponent","ComicIndexOverviewView","ComicIndexPosterView","ComicIndexTableView","ViewComponent","ComicIndexHeader","useState","sortDropdownOpen","setSortDropdownOpen","viewDropdownOpen","setViewDropdownOpen","toggleSort","prevState","toggleView","setSort","e","setComicSort","target","value","setView","setComicView","IssueCountBar","props","count","total","className","percent","color","text","style","width","string","ComicIndexOverviewItem","numIssues","downloadedIssues","startYear","image","name","displayDescription","classes","__html","DOMPurify","sanitize","ADD_ATTR","Component","history","shape","push","func","publisher","inLibrary","bool","singleView","withRouter","map","comic","ComicIndexPosterItem","ComicIndexTableItem","ComicBadge","content","children","defaultProps","node","PageRow"],"mappings":"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","file":"4.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Search, Sliders } from \"react-feather\";\nimport { UncontrolledPopover, PopoverBody, UncontrolledTooltip } from \"reactstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteComic, searchComic } from \"@/Store/Slices/comics\";\n\nconst ComicSettings = ({ cvid }) => {\n    const dispatch = useDispatch();\n\n    function onDeleteClick() {\n        dispatch(deleteComic(cvid));\n    }\n\n    function onSearchClick() {\n        dispatch(searchComic(cvid));\n    }\n\n    return (\n        <>\n            <Search className=\"cursor-pointer mr-1\" id={\"search-button-\" + cvid} onClick={onSearchClick} />\n            <UncontrolledTooltip\n                placement=\"top\"\n                target={\"search-button-\" + cvid}\n            >\n                Search for all monitored issues in this comic\n            </UncontrolledTooltip>\n\n            <Sliders className=\"cursor-pointer mr-1\" id={\"settings-button-\" + cvid} />\n            <UncontrolledPopover\n                trigger=\"legacy\"\n                target={\"settings-button-\" + cvid}\n                placement=\"bottom\"\n            >\n                <PopoverBody>\n                    <div className=\"text-center\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-danger d-block\"\n                            onClick={onDeleteClick}\n                        >\n                            Delete\n                        </button>\n                        <a\n                            className=\"btn btn-secondary d-block\"\n                            href={\"/api/comic/\" + cvid + \"/comicvine\"}\n                            target=\"_blank\"\n                        >\n                            View on ComicVine\n                        </a>\n                    </div>\n                        \n                </PopoverBody>\n            </UncontrolledPopover>\n            <UncontrolledTooltip\n                placement=\"top\"\n                target={\"settings-button-\" + cvid}\n            >\n                Settings\n            </UncontrolledTooltip>\n        </>\n    );\n};\n\nComicSettings.propTypes = {\n    cvid: PropTypes.number,\n};\n\nexport default ComicSettings;\n","import React from \"react\";\nimport ComicIndexOverviewView from \"@/Comic/Index/Overview/ComicIndexOverviewView\";\nimport ComicIndexPosterView from \"@/Comic/Index/Poster/ComicIndexPosterView\";\nimport ComicIndexTableView from \"@/Comic/Index/Table/ComicIndexTableView\";\nimport ComicIndexHeader from \"@/Comic/Index/ComicIndexHeader\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { sortedComicsSelector } from \"@/Store/Slices/comics\";\n\nconst ComicIndex = () => {\n    const { items: comics, isLoading, isPopulated, view } = useSelector(\n        sortedComicsSelector\n    );\n\n    if (isLoading) {\n        return <LoadingIndicator />;\n    }\n\n    if (!isPopulated && !isLoading) {\n        return \"Something went wrong\";\n    }\n\n    if (!comics.length) {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12 text-center\">\n                    <h3>\n                        There are no comics in your library yet.{\" \"}\n                        <Link to=\"/add/new\">Add some</Link>.\n                    </h3>\n                </div>\n            </div>\n        );\n    }\n\n    function getViewComponent(view) {\n        if (view == \"overview\") {\n            return ComicIndexOverviewView;\n        }\n\n        if (view == \"posters\") {\n            return ComicIndexPosterView;\n        }\n\n        return ComicIndexTableView;\n    }\n\n    const ViewComponent = getViewComponent(view);\n\n    return (\n        <>\n            <ComicIndexHeader />\n            <PageRow>\n                <div id=\"comic-list\">\n                    <ViewComponent comics={comics} />\n                </div>\n            </PageRow>\n        </>\n    );\n};\n\nexport default ComicIndex;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setComicSort, setComicView } from \"@/Store/Slices/comics\";\nimport { Eye } from \"react-feather\";\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from \"reactstrap\";\n\nconst ComicIndexHeader = () => {\n    const dispatch = useDispatch();\n    const [sortDropdownOpen, setSortDropdownOpen] = useState(false);\n    const [viewDropdownOpen, setViewDropdownOpen] = useState(false);\n\n    const toggleSort = () => setSortDropdownOpen((prevState) => !prevState);\n    const toggleView = () => setViewDropdownOpen((prevState) => !prevState);\n\n    function setSort(e) {\n        dispatch(setComicSort(e.target.value));\n    }\n\n    function setView(e) {\n        dispatch(setComicView(e.target.value));\n    }\n\n    return (\n        <div className=\"row justify-content-end text-right pb-4\">\n            <div className=\"col-md-3\">\n                <Dropdown isOpen={viewDropdownOpen} toggle={toggleView} className=\"d-inline mr-2\">\n                    <DropdownToggle caret><Eye /></DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem value=\"overview\" onClick={setView}>\n                            Overview\n                        </DropdownItem>\n                        <DropdownItem value=\"posters\" onClick={setView}>\n                            Posters\n                        </DropdownItem>\n                        <DropdownItem value=\"table\" onClick={setView}>\n                            Table\n                        </DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n                <Dropdown isOpen={sortDropdownOpen} toggle={toggleSort} className=\"d-inline\">\n                    <DropdownToggle caret>Sort Comics</DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem value=\"sortName\" onClick={setSort}>\n                            Title\n                        </DropdownItem>\n                        <DropdownItem value=\"downloadedIssues\" onClick={setSort}>\n                            Issues\n                        </DropdownItem>\n                        <DropdownItem value=\"numIssues\" onClick={setSort}>\n                            Issue Count\n                        </DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n        </div>\n    );\n};\n\nexport default ComicIndexHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst IssueCountBar = (props) => {\n    const { count, total, className } = props;\n\n    const percent = count / total;\n    const color = count == total ? \"primary\" : \"danger\";\n    const text = count + \" / \" + total;\n    const style = {\n        width: percent * 100 + \"%\",\n    };\n\n    return (\n        <div className={\"issue-progress \" + (className || \"\")}>\n            <span className=\"progressbar-back-text\">{text}</span>\n            <div\n                className={\"progress-bar bg-\" + color}\n                style={style}\n                aria-valuenow=\"25\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n            >\n                <span className=\"progressbar-front-text\">{text}</span>\n            </div>\n        </div>\n    );\n};\n\nIssueCountBar.propTypes = {\n    count: PropTypes.number,\n    total: PropTypes.number,\n    className: PropTypes.string,\n};\n\nexport default IssueCountBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\nimport Pluralize from \"react-pluralize\";\nimport ComicBadge from \"@/Components/ComicBadge\";\nimport IssueCountBar from \"@/Comic/Index/IssueCountBar\";\nimport ComicSettings from \"@/Comic/Details/ComicSettings\";\n\nclass ComicIndexOverviewItem extends Component {\n    render() {\n        const {\n            cvid,\n            numIssues,\n            downloadedIssues,\n            startYear,\n            image,\n            name,\n            displayDescription,\n            classes,\n        } = this.props;\n\n        return (\n            <div className={\"comic-item row pb-5 \" + classes}>\n                <div className=\"col-md-2 col-sm-3\">\n                    <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                        <img className=\"cover-image\" src={image} />\n                    </Link>\n                </div>\n                <div className=\"col-md-10 col-sm-9\">\n                    <div className=\"row\">\n                        <div className=\"col-12 pb-1\">\n                            <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                                <span className=\"h2 mr-2\">\n                                    {name}{\" \"}\n                                    <span className=\"comic-year\">\n                                        ({startYear})\n                                    </span>\n                                </span>\n                            </Link>\n                            <span className=\"float-right\">\n                                <ComicSettings cvid={cvid} />\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                                <div\n                                    className=\"comic-description\"\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(\n                                            displayDescription,\n                                            { ADD_ATTR: [\"target\"] }\n                                        ),\n                                    }}\n                                ></div>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <ComicBadge>\n                                <Pluralize\n                                    singular={\"issue\"}\n                                    count={numIssues}\n                                />\n                            </ComicBadge>\n                        </div>\n                        <div className=\"col-md-2 offset-md-8\">\n                            <IssueCountBar\n                                count={downloadedIssues}\n                                total={numIssues}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nComicIndexOverviewItem.propTypes = {\n    cvid: PropTypes.number,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }),\n    numIssues: PropTypes.number,\n    downloadedIssues: PropTypes.number,\n    startYear: PropTypes.number,\n    publisher: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    displayDescription: PropTypes.string,\n    inLibrary: PropTypes.bool,\n    singleView: PropTypes.bool,\n    classes: PropTypes.string,\n};\n\nexport default withRouter(ComicIndexOverviewItem);\n","import React from \"react\";\nimport ComicIndexOverviewItem from \"@/Comic/Index/Overview/ComicIndexOverviewItem\";\n\nconst ComicIndexOverviewView = (props) => {\n    const comics = props.comics || [];\n\n    return (\n        <>\n            {comics.map((comic) => (\n                <ComicIndexOverviewItem\n                    {...comic}\n                    key={comic.cvid}\n                />\n            ))}\n        </>\n    );\n}\n\nexport default ComicIndexOverviewView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\nimport Pluralize from \"react-pluralize\";\nimport ComicBadge from \"@/Components/ComicBadge\";\nimport IssueCountBar from \"@/Comic/Index/IssueCountBar\";\nimport ComicSettings from \"@/Comic/Details/ComicSettings\";\nimport { Card, CardTitle, CardText } from \"reactstrap\";\n\nclass ComicIndexPosterItem extends Component {\n    render() {\n        const {\n            cvid,\n            numIssues,\n            downloadedIssues,\n            startYear,\n            image,\n            name,\n            displayDescription,\n            classes,\n        } = this.props;\n\n        return (\n            <Card className=\"shadow p-2 m-2 comic-poster-item\">\n                <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                    <div className=\"comic-poster-item-image\">\n                        <img className=\"cover-image\" src={image} />\n                    </div>\n                </Link>\n                <IssueCountBar\n                    count={downloadedIssues}\n                    total={numIssues}\n                    className=\"issue-progress-poster mb-0\"\n                />\n            </Card>\n        );\n    }\n}\n\nComicIndexPosterItem.propTypes = {\n    cvid: PropTypes.number,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }),\n    numIssues: PropTypes.number,\n    downloadedIssues: PropTypes.number,\n    startYear: PropTypes.number,\n    publisher: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    displayDescription: PropTypes.string,\n    inLibrary: PropTypes.bool,\n    singleView: PropTypes.bool,\n    classes: PropTypes.string,\n};\n\nexport default withRouter(ComicIndexPosterItem);\n","import React from \"react\";\nimport ComicIndexPosterItem from \"@/Comic/Index/Poster/ComicIndexPosterItem\";\n\nconst ComicIndexPosterView = (props) => {\n    const comics = props.comics || [];\n\n    return (\n        <div className=\"text-center\">\n            {comics.map((comic) => (\n                <ComicIndexPosterItem\n                    {...comic}\n                    key={comic.cvid}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default ComicIndexPosterView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\nimport Pluralize from \"react-pluralize\";\nimport ComicBadge from \"@/Components/ComicBadge\";\nimport IssueCountBar from \"@/Comic/Index/IssueCountBar\";\nimport ComicSettings from \"@/Comic/Details/ComicSettings\";\n\nclass ComicIndexTableItem extends Component {\n    render() {\n        const {\n            cvid,\n            numIssues,\n            downloadedIssues,\n            startYear,\n            image,\n            name,\n            displayDescription,\n            classes,\n        } = this.props;\n\n        return (\n            <tr>\n                <td>\n                    <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                        {name}\n                    </Link>\n                </td>\n                <td>\n                    <IssueCountBar\n                        count={downloadedIssues}\n                        total={numIssues}\n                    />\n                </td>\n                <td>\n                    <ComicSettings cvid={cvid} />\n                </td>\n            </tr>\n        );\n    }\n}\n\nComicIndexTableItem.propTypes = {\n    cvid: PropTypes.number,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }),\n    numIssues: PropTypes.number,\n    downloadedIssues: PropTypes.number,\n    startYear: PropTypes.number,\n    publisher: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    displayDescription: PropTypes.string,\n    inLibrary: PropTypes.bool,\n    singleView: PropTypes.bool,\n    classes: PropTypes.string,\n};\n\nexport default withRouter(ComicIndexTableItem);\n","import React from \"react\";\nimport ComicIndexTableItem from \"@/Comic/Index/Table/ComicIndexTableItem\";\n\nconst ComicIndexTableView = (props) => {\n    const comics = props.comics || [];\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Issues</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n            {comics.map((comic) => (\n                <ComicIndexTableItem {...comic} key={comic.cvid} />\n            ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default ComicIndexTableView;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ComicBadge extends Component {\n    render() {\n        const content = this.props.children;\n        const { color } = this.props;\n        return (\n            <span className={\"comic-badge mr-2 badge badge-\" + color}>\n                {content}\n            </span>\n        );\n    }\n}\n\nComicBadge.defaultProps = {\n    color: \"primary\",\n};\n\nComicBadge.propTypes = {\n    children: PropTypes.node,\n    color: PropTypes.string,\n};\n\nexport default ComicBadge;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n"],"sourceRoot":""}