{"version":3,"sources":["webpack:///./resources/js/AddComic/Import/Import.js","webpack:///./resources/js/AddComic/Import/ImportDirectoryTable.js","webpack:///./resources/js/Components/FileBrowserModal/FileBrowserModal.js","webpack:///./resources/js/Components/FileBrowserModal/FileBrowserModalContent.js","webpack:///./resources/js/Components/Page/PageRow.js"],"names":["Import","dispatch","useDispatch","useState","modal","setModal","useSelector","pathsSelector","currentPath","toggleModal","onSelect","addItem","setCurrentPath","rootFoldersSelector","isLoading","items","useEffect","fetchItems","map","item","id","path","freeSpace","unmappedFoldersCount","deleteItem","FileBrowserModal","props","selectClick","onSelectClick","propTypes","PropTypes","bool","func","FileBrowserModalContent","directories","fetchPaths","dir","name","PageRow","className","children","node","string","defaultProps"],"mappings":"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","file":"8.js","sourcesContent":["import React, { useState } from \"react\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport FileBrowserModal from \"@/Components/FileBrowserModal/FileBrowserModal\";\nimport ImportDirectoryTable from \"@/AddComic/Import/ImportDirectoryTable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem } from \"@/Store/Slices/rootFolders\";\nimport { setCurrentPath, pathsSelector } from \"@/Store/Slices/paths\";\n\nconst Import = () => {\n    const dispatch = useDispatch();\n    const [modal, setModal] = useState(false);\n    const { currentPath } = useSelector(pathsSelector);\n\n    function toggleModal() {\n        setModal(!modal);\n    }\n\n    function onSelect() {\n        dispatch(addItem(currentPath));\n        dispatch(setCurrentPath(\"\"));\n    }\n\n    return (\n        <PageRow>\n            <h1 className=\"text-center\">Import existing Comics</h1>\n            <ImportDirectoryTable />\n            <button className=\"btn btn-primary\" onClick={toggleModal}>\n                Add Folder\n            </button>\n            <FileBrowserModal\n                modal={modal}\n                toggleModal={toggleModal}\n                onSelectClick={onSelect}\n            />\n        </PageRow>\n    );\n};\n\nexport default Import;\n","import React, { useEffect } from \"react\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    fetchItems,\n    deleteItem,\n    rootFoldersSelector,\n} from \"@/Store/Slices/rootFolders\";\nimport { X } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\n\nconst Import = () => {\n    const dispatch = useDispatch();\n    const { isLoading, items } = useSelector(rootFoldersSelector);\n\n    useEffect(() => {\n        dispatch(fetchItems());\n    }, [dispatch]);\n\n    if (isLoading) {\n        return <LoadingIndicator />\n    }\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>Path</th>\n                    <th>Free Space</th>\n                    <th>Unmapped Folders</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {items.map((item) => (\n                    <tr key={item.id}>\n                        <td>\n                            <Link to={\"/add/import/\" + item.id}>\n                                {item.path}\n                            </Link>\n                        </td>\n                        <td>{item.freeSpace}</td>\n                        <td>{item.unmappedFoldersCount}</td>\n                        <td>\n                            <X\n                                className=\"cursor-pointer\"\n                                onClick={() => dispatch(deleteItem(item.id))}\n                            />\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Import;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport FileBrowserModalContent from \"@/Components/FileBrowserModal/FileBrowserModalContent\";\n\nconst FileBrowserModal = (props) => {\n    function selectClick() {\n        props.onSelectClick();\n        props.toggleModal();\n    }\n\n    return (\n        <Modal\n            isOpen={props.modal}\n            toggle={props.toggleModal}\n            className=\"fileBrowserModal\"\n            size=\"lg\"\n        >\n            <ModalHeader toggle={props.toggleModal}>File Browser</ModalHeader>\n            <ModalBody>\n                <FileBrowserModalContent />\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"secondary\" onClick={props.toggleModal}>\n                    Close\n                </Button>\n                <Button color=\"primary\" onClick={selectClick}>\n                    Select\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nFileBrowserModal.propTypes = {\n    modal: PropTypes.bool,\n    toggleModal: PropTypes.func,\n    onSelectClick: PropTypes.func,\n};\n\nexport default FileBrowserModal;\n","import React, { useEffect } from \"react\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Folder, CornerUpLeft } from \"react-feather\";\nimport {\n    fetchPaths,\n    setCurrentPath,\n    pathsSelector,\n} from \"@/Store/Slices/paths\";\n\nconst FileBrowserModalContent = () => {\n    const dispatch = useDispatch();\n    const {\n        currentPath,\n        isLoading,\n        directories,\n    } = useSelector(pathsSelector);\n\n    useEffect(() => {\n        dispatch(fetchPaths());\n    }, [dispatch, currentPath]);\n\n    if (isLoading) {\n        return <LoadingIndicator />\n    }\n\n    return (\n        <>\n            <p>{currentPath}</p>\n            <table className=\"table file-browser-table\">\n                <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {currentPath !== \"\" ? (\n                        <tr onClick={() => dispatch(setCurrentPath(\"..\"))}>\n                            <td className=\"text-center file-type-cell\">\n                                <CornerUpLeft />\n                            </td>\n                            <td className=\"file-name-cell\">..</td>\n                        </tr>\n                    ) : null}\n                    {directories.map((dir) => (\n                        <tr\n                            key={dir.name}\n                            onClick={() => dispatch(setCurrentPath(dir.path))}\n                        >\n                            <td className=\"text-center file-type-cell\">\n                                <Folder />\n                            </td>\n                            <td className=\"file-name-cell\">{dir.name}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </>\n    );\n};\n\nexport default FileBrowserModalContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n"],"sourceRoot":""}