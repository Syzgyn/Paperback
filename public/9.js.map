{"version":3,"sources":["webpack:///./resources/js/Comic/Index/ComicIndex.js","webpack:///./resources/js/Comic/Index/ComicIndexHeader.js","webpack:///./resources/js/Comic/Index/ComicIndexItem.js","webpack:///./resources/js/Comic/Index/IssueCountBar.js","webpack:///./resources/js/Components/ComicBadge.js","webpack:///./resources/js/Components/Page/PageRow.js"],"names":["ComicIndex","useSelector","sortedComicsSelector","comics","items","isFetching","isPopulated","length","map","comic","cvid","ComicIndexHeader","dispatch","useDispatch","useState","dropdownOpen","setDropdownOpen","toggle","prevState","setSort","e","setComicSort","target","value","ComicIndexItem","props","numIssues","downloadedIssues","startYear","image","name","displayDescription","classes","__html","DOMPurify","sanitize","ADD_ATTR","Component","propTypes","PropTypes","number","history","shape","push","func","publisher","string","inLibrary","bool","singleView","withRouter","IssueCountBar","count","total","percent","color","text","style","width","ComicBadge","content","children","defaultProps","node","PageRow","className"],"mappings":"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","file":"9.js","sourcesContent":["import React from \"react\";\nimport ComicIndexItem from \"./ComicIndexItem\";\nimport ComicIndexHeader from \"@/Comic/Index/ComicIndexHeader\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { comicsSelector, sortedComicsSelector } from \"@/Store/Slices/comics\";\n\nconst ComicIndex = () => {\n    const { items: comics, isFetching, isPopulated } = useSelector(\n        sortedComicsSelector\n    );\n\n    if (isFetching) {\n        return <LoadingIndicator />;\n    }\n\n    if (!isPopulated && !isFetching) {\n        return \"Something went wrong\";\n    }\n\n    if (!comics.length) {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12 text-center\">\n                    <h3>\n                        There are no comics in your library yet.{\" \"}\n                        <Link to=\"/add/new\">Add some</Link>.\n                    </h3>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <ComicIndexHeader />\n            <PageRow>\n                <div id=\"comic-list\">\n                    {comics.map((comic) => (\n                        <ComicIndexItem\n                            {...comic}\n                            key={comic.cvid}\n                            indexView={true}\n                        />\n                    ))}\n                </div>\n            </PageRow>\n        </>\n    );\n};\n\nexport default ComicIndex;\n","import React, { useState } from \"react\";\nimport ComicIndexItem from \"./ComicIndexItem\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch} from \"react-redux\";\nimport { setComicSort } from \"@/Store/Slices/comics\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst ComicIndexHeader = () => {\n    const dispatch = useDispatch();\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    \n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    function setSort(e) {\n        dispatch(setComicSort(e.target.value));\n    }\n\n    return (\n        <div className=\"row justify-content-end\">\n            <div className=\"col-md-3\">\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret>\n                        Sort Comics\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem value=\"sortName\" onClick={setSort}>Title</DropdownItem>\n                        <DropdownItem value=\"numIssues\" onClick={setSort}>Issues</DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n        </div>\n    );\n}\n\nexport default ComicIndexHeader;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\nimport Pluralize from \"react-pluralize\";\nimport ComicBadge from \"@/Components/ComicBadge\";\nimport IssueCountBar from \"./IssueCountBar\";\n\nclass ComicIndexItem extends Component {\n    render() {\n        const {\n            cvid,\n            numIssues,\n            downloadedIssues,\n            startYear,\n            image,\n            name,\n            displayDescription,\n            classes,\n        } = this.props;\n\n        return (\n            <div className={\"comic-item row pb-5 \" + classes}>\n                <div className=\"col-md-2 col-sm-3\">\n                    <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                        <img className=\"cover-image\" src={image} />\n                    </Link>\n                </div>\n                <div className=\"col-md-10 col-sm-9\">\n                    <div className=\"row\">\n                        <div className=\"col-12 pb-1\">\n                            <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                                <span className=\"h2 mr-2\">\n                                    {name}{\" \"}\n                                    <span className=\"comic-year\">\n                                        ({startYear})\n                                    </span>\n                                </span>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <Link to={\"/comic/\" + cvid} className=\"hideLink\">\n                                <div\n                                    className=\"comic-description\"\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(\n                                            displayDescription,\n                                            { ADD_ATTR: [\"target\"] }\n                                        ),\n                                    }}\n                                ></div>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <ComicBadge>\n                                <Pluralize\n                                    singular={\"issue\"}\n                                    count={numIssues}\n                                />\n                            </ComicBadge>\n                        </div>\n                        <div className=\"col-md-2 offset-md-8\">\n                            <IssueCountBar\n                                count={downloadedIssues}\n                                total={numIssues}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nComicIndexItem.propTypes = {\n    cvid: PropTypes.number,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }),\n    numIssues: PropTypes.number,\n    downloadedIssues: PropTypes.number,\n    startYear: PropTypes.number,\n    publisher: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    displayDescription: PropTypes.string,\n    inLibrary: PropTypes.bool,\n    singleView: PropTypes.bool,\n    classes: PropTypes.string,\n};\n\nexport default withRouter(ComicIndexItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction IssueCountBar(props) {\n    const { count, total } = props;\n\n    const percent = count / total;\n    const color = count == total ? \"primary\" : \"danger\";\n    const text = count + \" / \" + total;\n    const style = {\n        width: percent + \"%\",\n    };\n\n    return (\n        <div className=\"issue-progress\">\n            <span className=\"progressbar-back-text\">{text}</span>\n            <div\n                className={\"progress-bar bg-\" + color}\n                style={style}\n                aria-valuenow=\"25\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n            >\n                <span className=\"progressbar-front-text\">{text}</span>\n            </div>\n        </div>\n    );\n}\n\nIssueCountBar.propTypes = {\n    count: PropTypes.number,\n    total: PropTypes.number,\n};\n\nexport default IssueCountBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ComicBadge extends Component {\n    render() {\n        const content = this.props.children;\n        const { color } = this.props;\n        return (\n            <span className={\"comic-badge mr-2 badge badge-\" + color}>\n                {content}\n            </span>\n        );\n    }\n}\n\nComicBadge.defaultProps = {\n    color: \"primary\",\n};\n\nComicBadge.propTypes = {\n    children: PropTypes.node,\n    color: PropTypes.string,\n};\n\nexport default ComicBadge;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n"],"sourceRoot":""}