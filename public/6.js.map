{"version":3,"sources":["webpack:///./resources/js/Components/Page/PageRow.js","webpack:///./resources/js/Wanted/WantedIssueControls.js","webpack:///./resources/js/Wanted/WantedItem.js","webpack:///./resources/js/Wanted/WantedList.js","webpack:///./resources/js/Wanted/WantedPage.js","webpack:///./resources/js/Wanted/WantedPageControls.js"],"names":["PageRow","props","className","children","propTypes","PropTypes","node","string","defaultProps","WantedIssueControls","WantedItem","dispatch","useDispatch","selectItem","cvid","isSelected","comic_id","comic_name","issue_num","issue_name","release_date","integer","bool","WantedList","useSelector","wantedIssuesSelector","items","selectedItems","getSortClick","key","setSortKey","selectAll","e","target","checked","values","map","item","indexOf","WantedPage","isLoading","isPopulated","useEffect","fetchItems","WantedPageControls","page","totalPages","setPage","Math","max","min"],"mappings":"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","file":"6.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nconst WantedIssueControls = () => {\n    return (\n        <div className=\"m-2\">\n            <ButtonGroup>\n                <Button className=\"border border-secondary\" color=\"light\">\n                    Search Selected\n                </Button>\n                <Button className=\"border border-secondary\" color=\"light\">\n                    Search All Missing\n                </Button>\n            </ButtonGroup>\n        </div>\n    );\n};\n\nexport default WantedIssueControls;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { selectItem } from \"@/Store/Slices/wanted\";\n\nconst WantedItem = (props) => {\n    const dispatch = useDispatch();\n    return (\n        <tr>\n            <td className=\"wanted-checkbox-cell\">\n                <input\n                    type=\"checkbox\"\n                    onChange={() => dispatch(selectItem(props.cvid))}\n                    checked={props.isSelected}\n                />\n            </td>\n            <td className=\"wanted-comic-cell\">\n                <Link to={\"/comic/\" + props.comic_id}>{props.comic_name}</Link>\n            </td>\n            <td className=\"wanted-issue-num-cell\">{props.issue_num}</td>\n            <td className=\"wanted-issue-name-cell\">{props.issue_name}</td>\n            <td className=\"wanted-date-cell\">{props.release_date}</td>\n        </tr>\n    );\n};\n\nWantedItem.propTypes = {\n    cvid: PropTypes.integer,\n    isSelected: PropTypes.bool,\n    comic_id: PropTypes.integer,\n    comic_name: PropTypes.string,\n    issue_num: PropTypes.integer,\n    issue_name: PropTypes.string,\n    release_date: PropTypes.string,\n};\n\nexport default WantedItem;\n","import React from \"react\";\nimport WantedItem from \"@/Wanted/WantedItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    selectItem,\n    setSortKey,\n    wantedIssuesSelector,\n} from \"@/Store/Slices/wanted\";\n\nconst WantedList = () => {\n    const dispatch = useDispatch();\n    const { items, selectedItems } = useSelector(wantedIssuesSelector);\n\n    function getSortClick(key) {\n        return function () {\n            dispatch(setSortKey(key));\n        };\n    }\n\n    function selectAll(e) {\n        if (e.target.checked) {\n            const values = items.map((item) => item.cvid);\n            dispatch(selectItem(values));\n        } else {\n            dispatch(selectItem([]));\n        }\n    }\n\n    return (\n        <table className=\"table wanted-table\">\n            <thead>\n                <tr>\n                    <th>\n                        <input type=\"checkbox\" onChange={selectAll} />\n                    </th>\n                    <th onClick={getSortClick(\"comic.name\")}>Comic Name</th>\n                    <th onClick={getSortClick(\"issue_num\")}>Issue</th>\n                    <th onClick={getSortClick(\"name\")}>Issue Name</th>\n                    <th onClick={getSortClick(\"release_date\")}>Release Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                {items.map((item) => (\n                    <WantedItem\n                        {...item}\n                        isSelected={selectedItems.indexOf(item.cvid) > -1}\n                        key={item.cvid}\n                    />\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default WantedList;\n","import React, { useEffect } from \"react\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    fetchItems,\n    wantedIssuesSelector,\n} from \"@/Store/Slices/wanted\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport WantedList from \"@/Wanted/WantedList\";\nimport WantedPageControls from \"@/Wanted/WantedPageControls\";\nimport WantedIssueControls from \"@/Wanted/WantedIssueControls\";\n\nconst WantedPage = () => {\n    const dispatch = useDispatch();\n    const { isLoading, isPopulated } = useSelector(wantedIssuesSelector);\n\n    useEffect(() => {\n        dispatch(fetchItems());\n    }, [dispatch]);\n\n    if (isLoading && !isPopulated) {\n        return <LoadingIndicator />;\n    }\n\n    return (\n        <>\n            <PageRow>\n                <WantedIssueControls />\n            </PageRow>\n            <PageRow>\n                <WantedList />\n            </PageRow>\n            <WantedPageControls />\n        </>\n    );\n};\n\nexport default WantedPage;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPage, wantedIssuesSelector } from \"@/Store/Slices/wanted\";\nimport { SkipBack, SkipForward, FastForward, Rewind } from \"react-feather\";\n\nconst WantedPageControls = () => {\n    const dispatch = useDispatch();\n    const { page, totalPages } = useSelector(wantedIssuesSelector);\n\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-2\">\n                <SkipBack\n                    className=\"pagination-control\"\n                    onClick={() => dispatch(setPage(1))}\n                />\n                <Rewind\n                    className=\"pagination-control\"\n                    onClick={() => dispatch(setPage(Math.max(page - 1, 1)))}\n                />\n                {page} of {totalPages}\n                <FastForward\n                    className=\"pagination-control\"\n                    onClick={() =>\n                        dispatch(setPage(Math.min(page + 1, totalPages)))\n                    }\n                />\n                <SkipForward\n                    className=\"pagination-control\"\n                    onClick={() => dispatch(setPage(totalPages))}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default WantedPageControls;\n"],"sourceRoot":""}