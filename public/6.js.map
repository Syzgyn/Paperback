{"version":3,"sources":["webpack:///./resources/js/AddComic/Import/Import.js","webpack:///./resources/js/AddComic/Import/ImportDirectoryTable.js","webpack:///./resources/js/Components/FileBrowserModal/FileBrowserModal.js","webpack:///./resources/js/Components/FileBrowserModal/FileBrowserModalContent.js","webpack:///./resources/js/Components/Page/PageRow.js"],"names":["Import","dispatch","useDispatch","useState","modal","setModal","useSelector","pathsSelector","currentPath","toggleModal","onSelect","addItem","setCurrentPath","rootFoldersSelector","isLoading","isPopulated","items","useEffect","fetchItems","map","item","id","path","freeSpace","unmappedFoldersCount","deleteItem","FileBrowserModal","props","selectClick","onSelectClick","propTypes","PropTypes","bool","func","FileBrowserModalContent","directories","files","fetchPaths","dir","name","PageRow","className","children","node","string","defaultProps"],"mappings":"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","file":"6.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport FileBrowserModal from \"@/Components/FileBrowserModal/FileBrowserModal\";\nimport ImportDirectoryTable from \"@/AddComic/Import/ImportDirectoryTable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem } from \"@/Store/Slices/rootFolders\";\nimport { setCurrentPath, pathsSelector } from \"@/Store/Slices/paths\";\n\nconst Import = () => {\n    const dispatch = useDispatch();\n    const [modal, setModal] = useState(false);\n    const { currentPath } = useSelector(pathsSelector);\n\n    function toggleModal() {\n        setModal(!modal);\n    }\n\n    function onSelect() {\n        dispatch(addItem(currentPath));\n        dispatch(setCurrentPath(\"\"));\n    }\n\n    return (\n        <PageRow>\n            <h1 className=\"text-center\">Import existing Comics</h1>\n            <ImportDirectoryTable />\n            <button className=\"btn btn-primary\" onClick={toggleModal}>Add Folder</button>\n            <FileBrowserModal modal={modal} toggleModal={toggleModal} onSelectClick={onSelect} />\n        </PageRow>\n    );\n}\n\nexport default Import;\n","import React, { useEffect } from \"react\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport PageRow from \"@/Components/Page/PageRow\";\nimport FileBrowserModal from \"@/Components/FileBrowserModal/FileBrowserModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchItems, deleteItem, rootFoldersSelector } from \"@/Store/Slices/rootFolders\";\nimport { X } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\n\nconst Import = () => {\n    const dispatch = useDispatch();\n    const { isLoading, isPopulated, items } = useSelector(rootFoldersSelector);\n\n    useEffect(() => {\n        dispatch(fetchItems());\n    }, [dispatch]);\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>Path</th>\n                    <th>Free Space</th>\n                    <th>Unmapped Folders</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {items.map(item => (\n                    <tr key={item.id}>\n                        <td><Link to={\"/add/import/\" + item.id}>{item.path}</Link></td>\n                        <td>{item.freeSpace}</td>\n                        <td>{item.unmappedFoldersCount}</td>\n                        <td><X className=\"cursor-pointer\" onClick={() => dispatch(deleteItem(item.id))} /></td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Import;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport FileBrowserModalContent from \"@/Components/FileBrowserModal/FileBrowserModalContent\";\n\nconst FileBrowserModal = (props) => {\n\n    function selectClick() {\n        props.onSelectClick();\n        props.toggleModal();\n    }\n\n    return (\n        <Modal\n            isOpen={props.modal}\n            toggle={props.toggleModal}\n            className=\"fileBrowserModal\"\n            size=\"lg\"\n        >\n            <ModalHeader toggle={props.toggleModal}>File Browser</ModalHeader>\n            <ModalBody>\n                <FileBrowserModalContent />\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"secondary\" onClick={props.toggleModal}>\n                    Close\n                </Button>\n                <Button color=\"primary\" onClick={selectClick}>\n                    Select\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nFileBrowserModal.propTypes = {\n    modal: PropTypes.bool,\n    toggleModal: PropTypes.func,\n    onSelectClick: PropTypes.func,\n}\n\nexport default FileBrowserModal;\n","import React, { useEffect } from \"react\";\nimport LoadingIndicator from \"@/Components/Loading/LoadingIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Folder, CornerUpLeft } from \"react-feather\";\nimport {\n    fetchPaths,\n    setCurrentPath,\n    pathsSelector,\n} from \"@/Store/Slices/paths\";\n\nconst FileBrowserModalContent = () => {\n    const dispatch = useDispatch();\n    const { currentPath, isLoading, isPopulated, directories, files } = useSelector(pathsSelector);\n\n    useEffect(() => {\n        dispatch(fetchPaths());\n    }, [dispatch, currentPath]);\n\n    return (\n        <>\n            <p>{currentPath}</p>\n            <table className=\"table file-browser-table\">\n                <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {currentPath !== \"\" ?\n                        <tr onClick={() => dispatch(setCurrentPath('..'))} >\n                            <td className=\"text-center file-type-cell\"><CornerUpLeft /></td>\n                            <td className=\"file-name-cell\">..</td>\n                        </tr>\n                    : null} \n                    {directories.map(dir => (\n                        <tr key={dir.name} onClick={() => dispatch(setCurrentPath(dir.path))}>\n                            <td className=\"text-center file-type-cell\"><Folder /></td>\n                            <td className=\"file-name-cell\">{dir.name}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default FileBrowserModalContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PageRow(props) {\n    const { className } = props;\n\n    return (\n        <div className={\"row \" + className}>\n            <div className=\"col-md-12\">{props.children}</div>\n        </div>\n    );\n}\n\nPageRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nPageRow.defaultProps = {\n    className: \"\",\n};\n\nexport default PageRow;\n"],"sourceRoot":""}